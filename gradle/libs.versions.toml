[versions]

kotlin-test = "1.9.22"
coroutines-test = "1.8.0"
mockk = "1.13.9"
turbine = "1.0.0"
koin-core = "4.0.0"
kotlin="2.1.10"
compose-plugin="1.7.3"
ktor="3.1.1"
decompose="3.3.0"
essenty="2.5.0"
media3="1.5.1"
kotlinx-serialization ="1.8.0"
vlcj = "4.8.2"
image-loader="1.10.0"

# Android
androidx-activity-compose="1.10.1"
agp = "8.7.3"

datastore = "1.1.3"




[libraries]
# AndroidX
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity-compose" }

# Media3
androidx-media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "media3" }

#essenty
essenty-lifecycle = { module = "com.arkivanov.essenty:lifecycle", version.ref = "essenty" }

#decompose
decompose={ module = "com.arkivanov.decompose:decompose", version.ref = "decompose"}
#decompose-compose={ module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "decompose"}
decompose-compose="com.arkivanov.decompose:extensions-compose-experimental:3.2.0-alpha04"

# Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

# KotlinX
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

#image loaderxx
image-loader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "image-loader" }

# Vlcj
vlcj = { module = "uk.co.caprica:vlcj", version.ref = "vlcj" }

# Koin
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin-core" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin-core" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin-core" }

# Testing
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin-test" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin-test" }
kotlin-test-annotations = { module = "org.jetbrains.kotlin:kotlin-test-annotations-common", version.ref = "kotlin-test" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines-test" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

#datastore
datastore-core = { module = "androidx.datastore:datastore", version.ref = "datastore" }
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }


[plugins]
# Multiplatform
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

# Android
android-library = { id = "com.android.library", version.ref = "agp" }
android-application = { id = "com.android.application", version.ref = "agp" }

[bundles]

ktor = [
    "ktor-client-core",
    "ktor-logging",
    "ktor-serialization",
    "ktor-content-negotiation",
    "ktor-client-js",
]

decompose = [
    "decompose",
    "decompose-compose"
]

koin = [
    "koin-core",
    "koin-android",
    "koin-test"
]

testing = [
    "kotlin-test",
    "kotlin-test-annotations",
    "coroutines-test",
    "turbine"
]
